var fs = require('fs');
var http = require('http');
var geojson_url = 'http://opendata.arcgis.com/datasets/4b038a41d5fc4237b85b364b48d41445_0.geojson';
var geojson_file = '../Wichita_Transit_Routes.json';
var routes_file = '../routes.js';
var geojson = ''; // global geojson data accessible from all callbacks and functions

// Attempt to fetch latest geojson data from Wichita portal
// Fallback to local JSON file if error occurs.
console.log('Fetching latest geojson data.');
http.get(geojson_url, function(res) {
  console.log("Got response: " + res.statusCode);

  // Fetch the json data in chunks and append to geojson variable.
  res.setEncoding('utf8');
  res.on('data', function (chunk) {
    geojson += chunk;
  });
  res.on('end', function() {
    // If a JSON parse error occurs, handle error by reading from existing local file.
    try {
      geojson = JSON.parse(geojson);
      writeRoutesFile();
    }
    catch (error) {
      console.log("JSON Parse error: " + error.message);
      readJSONFile();
      writeRoutesFile();
    }
  });
// If there is a network error, handle it by reading from existing local file.
}).on('error', function(error) {
  console.log("Got error: " + error.message);
  readJSONFile();
  writeRoutesFile();
});


// Fallback in case network or JSON parse error.
// Read geojson from local static file.
function readJSONFile() {
  console.log("Reading from existing local static file instead");
  geojson = JSON.parse(fs.readFileSync(geojson_file, 'utf8'));
}

// Take the geojson object and filter for desired properties.
// Then write to the routes.js file.
function writeRoutesFile() {
  var features = geojson.features;
  var routes = [];
  var feature, geometry, route;

  for (var i = 0; i < features.length; i++) {
    feature = features[i];
    route = {
      id: feature.properties.OBJECTID,
      name: feature.properties.NAME,
      geojson: feature
    };

    routes.push(route);
  }
  // Loop through features array and put subset of properties data into route.
  // for (var feature in features) {
  //  route = {
  //    id: feature.properties.OBJECTID,
  //    name: feature.properties.NAME,
  //    geojson: feature
  //  };

  //  routes.push(route);
  // }

  // Create the text output to be written to file.
  // Turn routes into a string.
  var code_str = '// Generated by make_routes.js\n// Do not edit by hand.\nroutes = ' +
      JSON.stringify(routes);

  fs.writeFile(routes_file, code_str, function(err) {
    if (err) {
      return console.error(err);
    }
    console.log("Bus Routes file written successfully!");
  });
}
